// <auto-generated>
// This code was auto-generated by a tool, every time
// the tool executes this code will be reset.
//
// If you need to extend the classes generated to add
// fields or methods to them, please create partial
// declarations in another file.
// </auto-generated>
#pragma warning disable 0109
#pragma warning disable 1591


namespace Quantum {
  using Photon.Deterministic;
  using Quantum;
  using Quantum.Core;
  using Quantum.Collections;
  using Quantum.Inspector;
  using Quantum.Physics2D;
  using Quantum.Physics3D;
  using Byte = System.Byte;
  using SByte = System.SByte;
  using Int16 = System.Int16;
  using UInt16 = System.UInt16;
  using Int32 = System.Int32;
  using UInt32 = System.UInt32;
  using Int64 = System.Int64;
  using UInt64 = System.UInt64;
  using Boolean = System.Boolean;
  using String = System.String;
  using Object = System.Object;
  using FlagsAttribute = System.FlagsAttribute;
  using SerializableAttribute = System.SerializableAttribute;
  using MethodImplAttribute = System.Runtime.CompilerServices.MethodImplAttribute;
  using MethodImplOptions = System.Runtime.CompilerServices.MethodImplOptions;
  using FieldOffsetAttribute = System.Runtime.InteropServices.FieldOffsetAttribute;
  using StructLayoutAttribute = System.Runtime.InteropServices.StructLayoutAttribute;
  using LayoutKind = System.Runtime.InteropServices.LayoutKind;
  #if QUANTUM_UNITY //;
  using TooltipAttribute = UnityEngine.TooltipAttribute;
  using HeaderAttribute = UnityEngine.HeaderAttribute;
  using SpaceAttribute = UnityEngine.SpaceAttribute;
  using RangeAttribute = UnityEngine.RangeAttribute;
  using HideInInspectorAttribute = UnityEngine.HideInInspector;
  using PreserveAttribute = UnityEngine.Scripting.PreserveAttribute;
  using FormerlySerializedAsAttribute = UnityEngine.Serialization.FormerlySerializedAsAttribute;
  using MovedFromAttribute = UnityEngine.Scripting.APIUpdating.MovedFromAttribute;
  using CreateAssetMenu = UnityEngine.CreateAssetMenuAttribute;
  using RuntimeInitializeOnLoadMethodAttribute = UnityEngine.RuntimeInitializeOnLoadMethodAttribute;
  #endif //;
  
  public unsafe partial class Frame {
    public unsafe partial struct FrameEvents {
      static partial void GetEventTypeCountCodeGen(ref Int32 eventCount) {
        eventCount = 25;
      }
      static partial void GetParentEventIDCodeGen(Int32 eventID, ref Int32 parentEventID) {
        switch (eventID) {
          default: break;
        }
      }
      static partial void GetEventTypeCodeGen(Int32 eventID, ref System.Type result) {
        switch (eventID) {
          case EventPlayerIdle.ID: result = typeof(EventPlayerIdle); return;
          case EventPlayerRun.ID: result = typeof(EventPlayerRun); return;
          case EventPlayerAttack.ID: result = typeof(EventPlayerAttack); return;
          case EventPlayerDead.ID: result = typeof(EventPlayerDead); return;
          case EventBasicShotCreated.ID: result = typeof(EventBasicShotCreated); return;
          case EventPlayersIntroStarted.ID: result = typeof(EventPlayersIntroStarted); return;
          case EventPlayersIntroFinished.ID: result = typeof(EventPlayersIntroFinished); return;
          case EventDamageTaken.ID: result = typeof(EventDamageTaken); return;
          case EventOnInitialization.ID: result = typeof(EventOnInitialization); return;
          case EventOnMatchIntro.ID: result = typeof(EventOnMatchIntro); return;
          case EventOnRoundStartCountDown.ID: result = typeof(EventOnRoundStartCountDown); return;
          case EventOnGameRunning.ID: result = typeof(EventOnGameRunning); return;
          case EventOnRoundEnded.ID: result = typeof(EventOnRoundEnded); return;
          case EventOnGameOver.ID: result = typeof(EventOnGameOver); return;
          case EventOnGameRestarted.ID: result = typeof(EventOnGameRestarted); return;
          case EventPlayerSetupedEvent.ID: result = typeof(EventPlayerSetupedEvent); return;
          case EventPlayerAttackedEvent.ID: result = typeof(EventPlayerAttackedEvent); return;
          case EventPlayerRespawned.ID: result = typeof(EventPlayerRespawned); return;
          case EventFreezeApplied.ID: result = typeof(EventFreezeApplied); return;
          case EventFreezeUnApplied.ID: result = typeof(EventFreezeUnApplied); return;
          case EventFireApplied.ID: result = typeof(EventFireApplied); return;
          case EventFireUnApplied.ID: result = typeof(EventFireUnApplied); return;
          case EventPoisonApplied.ID: result = typeof(EventPoisonApplied); return;
          case EventPoisonUnApplied.ID: result = typeof(EventPoisonUnApplied); return;
          default: break;
        }
      }
      public EventPlayerIdle PlayerIdle(EntityRef Value) {
        var ev = _f.Context.AcquireEvent<EventPlayerIdle>(EventPlayerIdle.ID);
        ev.Value = Value;
        _f.AddEvent(ev);
        return ev;
      }
      public EventPlayerRun PlayerRun(EntityRef Value) {
        var ev = _f.Context.AcquireEvent<EventPlayerRun>(EventPlayerRun.ID);
        ev.Value = Value;
        _f.AddEvent(ev);
        return ev;
      }
      public EventPlayerAttack PlayerAttack(EntityRef Value) {
        var ev = _f.Context.AcquireEvent<EventPlayerAttack>(EventPlayerAttack.ID);
        ev.Value = Value;
        _f.AddEvent(ev);
        return ev;
      }
      public EventPlayerDead PlayerDead(EntityRef Value) {
        var ev = _f.Context.AcquireEvent<EventPlayerDead>(EventPlayerDead.ID);
        ev.Value = Value;
        _f.AddEvent(ev);
        return ev;
      }
      public EventBasicShotCreated BasicShotCreated(EntityRef Value, QListPtr<StatusSetup> Statuses) {
        var ev = _f.Context.AcquireEvent<EventBasicShotCreated>(EventBasicShotCreated.ID);
        ev.Value = Value;
        ev.Statuses = Statuses;
        _f.AddEvent(ev);
        return ev;
      }
      public EventPlayersIntroStarted PlayersIntroStarted() {
        var ev = _f.Context.AcquireEvent<EventPlayersIntroStarted>(EventPlayersIntroStarted.ID);
        _f.AddEvent(ev);
        return ev;
      }
      public EventPlayersIntroFinished PlayersIntroFinished() {
        var ev = _f.Context.AcquireEvent<EventPlayersIntroFinished>(EventPlayersIntroFinished.ID);
        _f.AddEvent(ev);
        return ev;
      }
      public EventDamageTaken DamageTaken(EntityRef Entity, FP Value) {
        var ev = _f.Context.AcquireEvent<EventDamageTaken>(EventDamageTaken.ID);
        ev.Entity = Entity;
        ev.Value = Value;
        _f.AddEvent(ev);
        return ev;
      }
      public EventOnInitialization OnInitialization() {
        if (_f.IsPredicted) return null;
        var ev = _f.Context.AcquireEvent<EventOnInitialization>(EventOnInitialization.ID);
        _f.AddEvent(ev);
        return ev;
      }
      public EventOnMatchIntro OnMatchIntro() {
        if (_f.IsPredicted) return null;
        var ev = _f.Context.AcquireEvent<EventOnMatchIntro>(EventOnMatchIntro.ID);
        _f.AddEvent(ev);
        return ev;
      }
      public EventOnRoundStartCountDown OnRoundStartCountDown(QBoolean IsFirst) {
        if (_f.IsPredicted) return null;
        var ev = _f.Context.AcquireEvent<EventOnRoundStartCountDown>(EventOnRoundStartCountDown.ID);
        ev.IsFirst = IsFirst;
        _f.AddEvent(ev);
        return ev;
      }
      public EventOnGameRunning OnGameRunning() {
        if (_f.IsPredicted) return null;
        var ev = _f.Context.AcquireEvent<EventOnGameRunning>(EventOnGameRunning.ID);
        _f.AddEvent(ev);
        return ev;
      }
      public EventOnRoundEnded OnRoundEnded(Owner winner, Owner loser, QBoolean isDraw) {
        if (_f.IsPredicted) return null;
        var ev = _f.Context.AcquireEvent<EventOnRoundEnded>(EventOnRoundEnded.ID);
        ev.winner = winner;
        ev.loser = loser;
        ev.isDraw = isDraw;
        _f.AddEvent(ev);
        return ev;
      }
      public EventOnGameOver OnGameOver(Owner winner) {
        if (_f.IsPredicted) return null;
        var ev = _f.Context.AcquireEvent<EventOnGameOver>(EventOnGameOver.ID);
        ev.winner = winner;
        _f.AddEvent(ev);
        return ev;
      }
      public EventOnGameRestarted OnGameRestarted() {
        if (_f.IsPredicted) return null;
        var ev = _f.Context.AcquireEvent<EventOnGameRestarted>(EventOnGameRestarted.ID);
        _f.AddEvent(ev);
        return ev;
      }
      public EventPlayerSetupedEvent PlayerSetupedEvent(PlayerLink PlayerLink, Int32 TeamIndex) {
        var ev = _f.Context.AcquireEvent<EventPlayerSetupedEvent>(EventPlayerSetupedEvent.ID);
        ev.PlayerLink = PlayerLink;
        ev.TeamIndex = TeamIndex;
        _f.AddEvent(ev);
        return ev;
      }
      public EventPlayerAttackedEvent PlayerAttackedEvent(PlayerLink PlayerLink, Int32 TeamIndex) {
        var ev = _f.Context.AcquireEvent<EventPlayerAttackedEvent>(EventPlayerAttackedEvent.ID);
        ev.PlayerLink = PlayerLink;
        ev.TeamIndex = TeamIndex;
        _f.AddEvent(ev);
        return ev;
      }
      public EventPlayerRespawned PlayerRespawned(EntityRef Value) {
        if (_f.IsPredicted) return null;
        var ev = _f.Context.AcquireEvent<EventPlayerRespawned>(EventPlayerRespawned.ID);
        ev.Value = Value;
        _f.AddEvent(ev);
        return ev;
      }
      public EventFreezeApplied FreezeApplied(EntityRef Value) {
        var ev = _f.Context.AcquireEvent<EventFreezeApplied>(EventFreezeApplied.ID);
        ev.Value = Value;
        _f.AddEvent(ev);
        return ev;
      }
      public EventFreezeUnApplied FreezeUnApplied(EntityRef Value) {
        var ev = _f.Context.AcquireEvent<EventFreezeUnApplied>(EventFreezeUnApplied.ID);
        ev.Value = Value;
        _f.AddEvent(ev);
        return ev;
      }
      public EventFireApplied FireApplied(EntityRef Value) {
        var ev = _f.Context.AcquireEvent<EventFireApplied>(EventFireApplied.ID);
        ev.Value = Value;
        _f.AddEvent(ev);
        return ev;
      }
      public EventFireUnApplied FireUnApplied(EntityRef Value) {
        var ev = _f.Context.AcquireEvent<EventFireUnApplied>(EventFireUnApplied.ID);
        ev.Value = Value;
        _f.AddEvent(ev);
        return ev;
      }
      public EventPoisonApplied PoisonApplied(EntityRef Value) {
        var ev = _f.Context.AcquireEvent<EventPoisonApplied>(EventPoisonApplied.ID);
        ev.Value = Value;
        _f.AddEvent(ev);
        return ev;
      }
      public EventPoisonUnApplied PoisonUnApplied(EntityRef Value) {
        var ev = _f.Context.AcquireEvent<EventPoisonUnApplied>(EventPoisonUnApplied.ID);
        ev.Value = Value;
        _f.AddEvent(ev);
        return ev;
      }
    }
  }
  public unsafe partial class EventPlayerIdle : EventBase {
    public new const Int32 ID = 1;
    public EntityRef Value;
    protected EventPlayerIdle(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventPlayerIdle() : 
        base(1, EventFlags.Server|EventFlags.Client) {
    }
    public new QuantumGame Game {
      get {
        return (QuantumGame)base.Game;
      }
      set {
        base.Game = value;
      }
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 41;
        hash = hash * 31 + Value.GetHashCode();
        return hash;
      }
    }
  }
  public unsafe partial class EventPlayerRun : EventBase {
    public new const Int32 ID = 2;
    public EntityRef Value;
    protected EventPlayerRun(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventPlayerRun() : 
        base(2, EventFlags.Server|EventFlags.Client) {
    }
    public new QuantumGame Game {
      get {
        return (QuantumGame)base.Game;
      }
      set {
        base.Game = value;
      }
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 43;
        hash = hash * 31 + Value.GetHashCode();
        return hash;
      }
    }
  }
  public unsafe partial class EventPlayerAttack : EventBase {
    public new const Int32 ID = 3;
    public EntityRef Value;
    protected EventPlayerAttack(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventPlayerAttack() : 
        base(3, EventFlags.Server|EventFlags.Client) {
    }
    public new QuantumGame Game {
      get {
        return (QuantumGame)base.Game;
      }
      set {
        base.Game = value;
      }
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 47;
        hash = hash * 31 + Value.GetHashCode();
        return hash;
      }
    }
  }
  public unsafe partial class EventPlayerDead : EventBase {
    public new const Int32 ID = 4;
    public EntityRef Value;
    protected EventPlayerDead(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventPlayerDead() : 
        base(4, EventFlags.Server|EventFlags.Client) {
    }
    public new QuantumGame Game {
      get {
        return (QuantumGame)base.Game;
      }
      set {
        base.Game = value;
      }
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 53;
        hash = hash * 31 + Value.GetHashCode();
        return hash;
      }
    }
  }
  public unsafe partial class EventBasicShotCreated : EventBase {
    public new const Int32 ID = 5;
    public EntityRef Value;
    public QListPtr<StatusSetup> Statuses;
    protected EventBasicShotCreated(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventBasicShotCreated() : 
        base(5, EventFlags.Server|EventFlags.Client) {
    }
    public new QuantumGame Game {
      get {
        return (QuantumGame)base.Game;
      }
      set {
        base.Game = value;
      }
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 59;
        hash = hash * 31 + Value.GetHashCode();
        hash = hash * 31 + Statuses.GetHashCode();
        return hash;
      }
    }
  }
  public unsafe partial class EventPlayersIntroStarted : EventBase {
    public new const Int32 ID = 6;
    protected EventPlayersIntroStarted(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventPlayersIntroStarted() : 
        base(6, EventFlags.Server|EventFlags.Client) {
    }
    public new QuantumGame Game {
      get {
        return (QuantumGame)base.Game;
      }
      set {
        base.Game = value;
      }
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 61;
        return hash;
      }
    }
  }
  public unsafe partial class EventPlayersIntroFinished : EventBase {
    public new const Int32 ID = 7;
    protected EventPlayersIntroFinished(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventPlayersIntroFinished() : 
        base(7, EventFlags.Server|EventFlags.Client) {
    }
    public new QuantumGame Game {
      get {
        return (QuantumGame)base.Game;
      }
      set {
        base.Game = value;
      }
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 67;
        return hash;
      }
    }
  }
  public unsafe partial class EventDamageTaken : EventBase {
    public new const Int32 ID = 8;
    public EntityRef Entity;
    public FP Value;
    protected EventDamageTaken(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventDamageTaken() : 
        base(8, EventFlags.Server|EventFlags.Client) {
    }
    public new QuantumGame Game {
      get {
        return (QuantumGame)base.Game;
      }
      set {
        base.Game = value;
      }
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 71;
        hash = hash * 31 + Entity.GetHashCode();
        hash = hash * 31 + Value.GetHashCode();
        return hash;
      }
    }
  }
  public unsafe partial class EventOnInitialization : EventBase {
    public new const Int32 ID = 9;
    protected EventOnInitialization(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventOnInitialization() : 
        base(9, EventFlags.Server|EventFlags.Client|EventFlags.Synced) {
    }
    public new QuantumGame Game {
      get {
        return (QuantumGame)base.Game;
      }
      set {
        base.Game = value;
      }
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 73;
        return hash;
      }
    }
  }
  public unsafe partial class EventOnMatchIntro : EventBase {
    public new const Int32 ID = 10;
    protected EventOnMatchIntro(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventOnMatchIntro() : 
        base(10, EventFlags.Server|EventFlags.Client|EventFlags.Synced) {
    }
    public new QuantumGame Game {
      get {
        return (QuantumGame)base.Game;
      }
      set {
        base.Game = value;
      }
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 79;
        return hash;
      }
    }
  }
  public unsafe partial class EventOnRoundStartCountDown : EventBase {
    public new const Int32 ID = 11;
    public QBoolean IsFirst;
    protected EventOnRoundStartCountDown(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventOnRoundStartCountDown() : 
        base(11, EventFlags.Server|EventFlags.Client|EventFlags.Synced) {
    }
    public new QuantumGame Game {
      get {
        return (QuantumGame)base.Game;
      }
      set {
        base.Game = value;
      }
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 83;
        hash = hash * 31 + IsFirst.GetHashCode();
        return hash;
      }
    }
  }
  public unsafe partial class EventOnGameRunning : EventBase {
    public new const Int32 ID = 12;
    protected EventOnGameRunning(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventOnGameRunning() : 
        base(12, EventFlags.Server|EventFlags.Client|EventFlags.Synced) {
    }
    public new QuantumGame Game {
      get {
        return (QuantumGame)base.Game;
      }
      set {
        base.Game = value;
      }
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 89;
        return hash;
      }
    }
  }
  public unsafe partial class EventOnRoundEnded : EventBase {
    public new const Int32 ID = 13;
    public Owner winner;
    public Owner loser;
    public QBoolean isDraw;
    protected EventOnRoundEnded(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventOnRoundEnded() : 
        base(13, EventFlags.Server|EventFlags.Client|EventFlags.Synced) {
    }
    public new QuantumGame Game {
      get {
        return (QuantumGame)base.Game;
      }
      set {
        base.Game = value;
      }
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 97;
        hash = hash * 31 + winner.GetHashCode();
        hash = hash * 31 + loser.GetHashCode();
        hash = hash * 31 + isDraw.GetHashCode();
        return hash;
      }
    }
  }
  public unsafe partial class EventOnGameOver : EventBase {
    public new const Int32 ID = 14;
    public Owner winner;
    protected EventOnGameOver(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventOnGameOver() : 
        base(14, EventFlags.Server|EventFlags.Client|EventFlags.Synced) {
    }
    public new QuantumGame Game {
      get {
        return (QuantumGame)base.Game;
      }
      set {
        base.Game = value;
      }
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 101;
        hash = hash * 31 + winner.GetHashCode();
        return hash;
      }
    }
  }
  public unsafe partial class EventOnGameRestarted : EventBase {
    public new const Int32 ID = 15;
    protected EventOnGameRestarted(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventOnGameRestarted() : 
        base(15, EventFlags.Server|EventFlags.Client|EventFlags.Synced) {
    }
    public new QuantumGame Game {
      get {
        return (QuantumGame)base.Game;
      }
      set {
        base.Game = value;
      }
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 103;
        return hash;
      }
    }
  }
  public unsafe partial class EventPlayerSetupedEvent : EventBase {
    public new const Int32 ID = 16;
    public PlayerLink PlayerLink;
    public Int32 TeamIndex;
    protected EventPlayerSetupedEvent(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventPlayerSetupedEvent() : 
        base(16, EventFlags.Server|EventFlags.Client) {
    }
    public new QuantumGame Game {
      get {
        return (QuantumGame)base.Game;
      }
      set {
        base.Game = value;
      }
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 107;
        hash = hash * 31 + PlayerLink.GetHashCode();
        hash = hash * 31 + TeamIndex.GetHashCode();
        return hash;
      }
    }
  }
  public unsafe partial class EventPlayerAttackedEvent : EventBase {
    public new const Int32 ID = 17;
    public PlayerLink PlayerLink;
    public Int32 TeamIndex;
    protected EventPlayerAttackedEvent(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventPlayerAttackedEvent() : 
        base(17, EventFlags.Server|EventFlags.Client) {
    }
    public new QuantumGame Game {
      get {
        return (QuantumGame)base.Game;
      }
      set {
        base.Game = value;
      }
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 109;
        hash = hash * 31 + PlayerLink.GetHashCode();
        hash = hash * 31 + TeamIndex.GetHashCode();
        return hash;
      }
    }
  }
  public unsafe partial class EventPlayerRespawned : EventBase {
    public new const Int32 ID = 18;
    public EntityRef Value;
    protected EventPlayerRespawned(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventPlayerRespawned() : 
        base(18, EventFlags.Server|EventFlags.Client|EventFlags.Synced) {
    }
    public new QuantumGame Game {
      get {
        return (QuantumGame)base.Game;
      }
      set {
        base.Game = value;
      }
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 113;
        hash = hash * 31 + Value.GetHashCode();
        return hash;
      }
    }
  }
  public unsafe partial class EventFreezeApplied : EventBase {
    public new const Int32 ID = 19;
    public EntityRef Value;
    protected EventFreezeApplied(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventFreezeApplied() : 
        base(19, EventFlags.Server|EventFlags.Client) {
    }
    public new QuantumGame Game {
      get {
        return (QuantumGame)base.Game;
      }
      set {
        base.Game = value;
      }
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 127;
        hash = hash * 31 + Value.GetHashCode();
        return hash;
      }
    }
  }
  public unsafe partial class EventFreezeUnApplied : EventBase {
    public new const Int32 ID = 20;
    public EntityRef Value;
    protected EventFreezeUnApplied(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventFreezeUnApplied() : 
        base(20, EventFlags.Server|EventFlags.Client) {
    }
    public new QuantumGame Game {
      get {
        return (QuantumGame)base.Game;
      }
      set {
        base.Game = value;
      }
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 131;
        hash = hash * 31 + Value.GetHashCode();
        return hash;
      }
    }
  }
  public unsafe partial class EventFireApplied : EventBase {
    public new const Int32 ID = 21;
    public EntityRef Value;
    protected EventFireApplied(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventFireApplied() : 
        base(21, EventFlags.Server|EventFlags.Client) {
    }
    public new QuantumGame Game {
      get {
        return (QuantumGame)base.Game;
      }
      set {
        base.Game = value;
      }
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 137;
        hash = hash * 31 + Value.GetHashCode();
        return hash;
      }
    }
  }
  public unsafe partial class EventFireUnApplied : EventBase {
    public new const Int32 ID = 22;
    public EntityRef Value;
    protected EventFireUnApplied(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventFireUnApplied() : 
        base(22, EventFlags.Server|EventFlags.Client) {
    }
    public new QuantumGame Game {
      get {
        return (QuantumGame)base.Game;
      }
      set {
        base.Game = value;
      }
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 139;
        hash = hash * 31 + Value.GetHashCode();
        return hash;
      }
    }
  }
  public unsafe partial class EventPoisonApplied : EventBase {
    public new const Int32 ID = 23;
    public EntityRef Value;
    protected EventPoisonApplied(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventPoisonApplied() : 
        base(23, EventFlags.Server|EventFlags.Client) {
    }
    public new QuantumGame Game {
      get {
        return (QuantumGame)base.Game;
      }
      set {
        base.Game = value;
      }
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 149;
        hash = hash * 31 + Value.GetHashCode();
        return hash;
      }
    }
  }
  public unsafe partial class EventPoisonUnApplied : EventBase {
    public new const Int32 ID = 24;
    public EntityRef Value;
    protected EventPoisonUnApplied(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventPoisonUnApplied() : 
        base(24, EventFlags.Server|EventFlags.Client) {
    }
    public new QuantumGame Game {
      get {
        return (QuantumGame)base.Game;
      }
      set {
        base.Game = value;
      }
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 151;
        hash = hash * 31 + Value.GetHashCode();
        return hash;
      }
    }
  }
}
#pragma warning restore 0109
#pragma warning restore 1591
