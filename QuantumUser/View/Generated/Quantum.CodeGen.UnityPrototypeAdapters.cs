// <auto-generated>
// This code was auto-generated by a tool, every time
// the tool executes this code will be reset.
//
// If you need to extend the classes generated to add
// fields or methods to them, please create partial
// declarations in another file.
// </auto-generated>
#pragma warning disable 0109
#pragma warning disable 1591


namespace Quantum.Prototypes.Unity {
  using Photon.Deterministic;
  using Quantum;
  using Quantum.Core;
  using Quantum.Collections;
  using Quantum.Inspector;
  using Quantum.Physics2D;
  using Quantum.Physics3D;
  using Byte = System.Byte;
  using SByte = System.SByte;
  using Int16 = System.Int16;
  using UInt16 = System.UInt16;
  using Int32 = System.Int32;
  using UInt32 = System.UInt32;
  using Int64 = System.Int64;
  using UInt64 = System.UInt64;
  using Boolean = System.Boolean;
  using String = System.String;
  using Object = System.Object;
  using FlagsAttribute = System.FlagsAttribute;
  using SerializableAttribute = System.SerializableAttribute;
  using MethodImplAttribute = System.Runtime.CompilerServices.MethodImplAttribute;
  using MethodImplOptions = System.Runtime.CompilerServices.MethodImplOptions;
  using FieldOffsetAttribute = System.Runtime.InteropServices.FieldOffsetAttribute;
  using StructLayoutAttribute = System.Runtime.InteropServices.StructLayoutAttribute;
  using LayoutKind = System.Runtime.InteropServices.LayoutKind;
  #if QUANTUM_UNITY //;
  using TooltipAttribute = UnityEngine.TooltipAttribute;
  using HeaderAttribute = UnityEngine.HeaderAttribute;
  using SpaceAttribute = UnityEngine.SpaceAttribute;
  using RangeAttribute = UnityEngine.RangeAttribute;
  using HideInInspectorAttribute = UnityEngine.HideInInspector;
  using PreserveAttribute = UnityEngine.Scripting.PreserveAttribute;
  using FormerlySerializedAsAttribute = UnityEngine.Serialization.FormerlySerializedAsAttribute;
  using MovedFromAttribute = UnityEngine.Scripting.APIUpdating.MovedFromAttribute;
  using CreateAssetMenu = UnityEngine.CreateAssetMenuAttribute;
  using RuntimeInitializeOnLoadMethodAttribute = UnityEngine.RuntimeInitializeOnLoadMethodAttribute;
  #endif //;
  
  [System.SerializableAttribute()]
  public unsafe partial class CurrentTargetPrototype : Quantum.QuantumUnityPrototypeAdapter<Quantum.Prototypes.CurrentTargetPrototype> {
    public Quantum.Prototypes.Unity.PlayerLinkPrototype Value;
    partial void ConvertUser(Quantum.QuantumEntityPrototypeConverter converter, ref Quantum.Prototypes.CurrentTargetPrototype prototype);
    public override Quantum.Prototypes.CurrentTargetPrototype Convert(Quantum.QuantumEntityPrototypeConverter converter) {
      var result = new Quantum.Prototypes.CurrentTargetPrototype();
      converter.Convert(this.Value, out result.Value);
      ConvertUser(converter, ref result);
      return result;
    }
  }
  [System.SerializableAttribute()]
  public unsafe partial class HitBufferPrototype : Quantum.QuantumUnityPrototypeAdapter<Quantum.Prototypes.HitBufferPrototype> {
    [DynamicCollectionAttribute()]
    public Quantum.QuantumEntityPrototype[] Value = {};
    partial void ConvertUser(Quantum.QuantumEntityPrototypeConverter converter, ref Quantum.Prototypes.HitBufferPrototype prototype);
    public override Quantum.Prototypes.HitBufferPrototype Convert(Quantum.QuantumEntityPrototypeConverter converter) {
      var result = new Quantum.Prototypes.HitBufferPrototype();
      converter.Convert(this.Value, out result.Value);
      ConvertUser(converter, ref result);
      return result;
    }
  }
  [System.SerializableAttribute()]
  public unsafe partial class ObstaclePreventsAttackPrototype : Quantum.QuantumUnityPrototypeAdapter<Quantum.Prototypes.ObstaclePreventsAttackPrototype> {
    public Quantum.Prototypes.Unity.PlayerLinkPrototype Value;
    partial void ConvertUser(Quantum.QuantumEntityPrototypeConverter converter, ref Quantum.Prototypes.ObstaclePreventsAttackPrototype prototype);
    public override Quantum.Prototypes.ObstaclePreventsAttackPrototype Convert(Quantum.QuantumEntityPrototypeConverter converter) {
      var result = new Quantum.Prototypes.ObstaclePreventsAttackPrototype();
      converter.Convert(this.Value, out result.Value);
      ConvertUser(converter, ref result);
      return result;
    }
  }
  [System.SerializableAttribute()]
  public unsafe partial class OrbitCenterFollowTargetPrototype : Quantum.QuantumUnityPrototypeAdapter<Quantum.Prototypes.OrbitCenterFollowTargetPrototype> {
    public Quantum.QuantumEntityPrototype Value;
    partial void ConvertUser(Quantum.QuantumEntityPrototypeConverter converter, ref Quantum.Prototypes.OrbitCenterFollowTargetPrototype prototype);
    public override Quantum.Prototypes.OrbitCenterFollowTargetPrototype Convert(Quantum.QuantumEntityPrototypeConverter converter) {
      var result = new Quantum.Prototypes.OrbitCenterFollowTargetPrototype();
      converter.Convert(this.Value, out result.Value);
      ConvertUser(converter, ref result);
      return result;
    }
  }
  [System.SerializableAttribute()]
  public unsafe partial class OwnerPrototype : Quantum.QuantumUnityPrototypeAdapter<Quantum.Prototypes.OwnerPrototype> {
    public Quantum.Prototypes.Unity.PlayerLinkPrototype Link;
    public Int32 TeamIndex;
    partial void ConvertUser(Quantum.QuantumEntityPrototypeConverter converter, ref Quantum.Prototypes.OwnerPrototype prototype);
    public override Quantum.Prototypes.OwnerPrototype Convert(Quantum.QuantumEntityPrototypeConverter converter) {
      var result = new Quantum.Prototypes.OwnerPrototype();
      converter.Convert(this.Link, out result.Link);
      converter.Convert(this.TeamIndex, out result.TeamIndex);
      ConvertUser(converter, ref result);
      return result;
    }
  }
  [System.SerializableAttribute()]
  public unsafe partial class PlayerLinkPrototype : Quantum.QuantumUnityPrototypeAdapter<Quantum.Prototypes.PlayerLinkPrototype> {
    public PlayerRef Value;
    public Quantum.QuantumEntityPrototype Entity;
    partial void ConvertUser(Quantum.QuantumEntityPrototypeConverter converter, ref Quantum.Prototypes.PlayerLinkPrototype prototype);
    public override Quantum.Prototypes.PlayerLinkPrototype Convert(Quantum.QuantumEntityPrototypeConverter converter) {
      var result = new Quantum.Prototypes.PlayerLinkPrototype();
      converter.Convert(this.Value, out result.Value);
      converter.Convert(this.Entity, out result.Entity);
      ConvertUser(converter, ref result);
      return result;
    }
  }
  [System.SerializableAttribute()]
  public unsafe partial class ProcessedTargetsPrototype : Quantum.QuantumUnityPrototypeAdapter<Quantum.Prototypes.ProcessedTargetsPrototype> {
    [DynamicCollectionAttribute()]
    public Quantum.QuantumEntityPrototype[] Value = {};
    partial void ConvertUser(Quantum.QuantumEntityPrototypeConverter converter, ref Quantum.Prototypes.ProcessedTargetsPrototype prototype);
    public override Quantum.Prototypes.ProcessedTargetsPrototype Convert(Quantum.QuantumEntityPrototypeConverter converter) {
      var result = new Quantum.Prototypes.ProcessedTargetsPrototype();
      converter.Convert(this.Value, out result.Value);
      ConvertUser(converter, ref result);
      return result;
    }
  }
  [System.SerializableAttribute()]
  public unsafe partial class ProducerIdPrototype : Quantum.QuantumUnityPrototypeAdapter<Quantum.Prototypes.ProducerIdPrototype> {
    public Quantum.QuantumEntityPrototype Value;
    partial void ConvertUser(Quantum.QuantumEntityPrototypeConverter converter, ref Quantum.Prototypes.ProducerIdPrototype prototype);
    public override Quantum.Prototypes.ProducerIdPrototype Convert(Quantum.QuantumEntityPrototypeConverter converter) {
      var result = new Quantum.Prototypes.ProducerIdPrototype();
      converter.Convert(this.Value, out result.Value);
      ConvertUser(converter, ref result);
      return result;
    }
  }
  [System.SerializableAttribute()]
  public unsafe partial class TargetBufferPrototype : Quantum.QuantumUnityPrototypeAdapter<Quantum.Prototypes.TargetBufferPrototype> {
    [DynamicCollectionAttribute()]
    public Quantum.QuantumEntityPrototype[] Value = {};
    partial void ConvertUser(Quantum.QuantumEntityPrototypeConverter converter, ref Quantum.Prototypes.TargetBufferPrototype prototype);
    public override Quantum.Prototypes.TargetBufferPrototype Convert(Quantum.QuantumEntityPrototypeConverter converter) {
      var result = new Quantum.Prototypes.TargetBufferPrototype();
      converter.Convert(this.Value, out result.Value);
      ConvertUser(converter, ref result);
      return result;
    }
  }
  [System.SerializableAttribute()]
  public unsafe partial class TargetIdPrototype : Quantum.QuantumUnityPrototypeAdapter<Quantum.Prototypes.TargetIdPrototype> {
    public Quantum.QuantumEntityPrototype Value;
    partial void ConvertUser(Quantum.QuantumEntityPrototypeConverter converter, ref Quantum.Prototypes.TargetIdPrototype prototype);
    public override Quantum.Prototypes.TargetIdPrototype Convert(Quantum.QuantumEntityPrototypeConverter converter) {
      var result = new Quantum.Prototypes.TargetIdPrototype();
      converter.Convert(this.Value, out result.Value);
      ConvertUser(converter, ref result);
      return result;
    }
  }
  [System.SerializableAttribute()]
  public unsafe partial class TargetsHitCooldownPrototype : Quantum.QuantumUnityPrototypeAdapter<Quantum.Prototypes.TargetsHitCooldownPrototype> {
    [DynamicCollectionAttribute()]
    public Quantum.QuantumEntityPrototype[] Value = {};
    partial void ConvertUser(Quantum.QuantumEntityPrototypeConverter converter, ref Quantum.Prototypes.TargetsHitCooldownPrototype prototype);
    public override Quantum.Prototypes.TargetsHitCooldownPrototype Convert(Quantum.QuantumEntityPrototypeConverter converter) {
      var result = new Quantum.Prototypes.TargetsHitCooldownPrototype();
      converter.Convert(this.Value, out result.Value);
      ConvertUser(converter, ref result);
      return result;
    }
  }
  [System.SerializableAttribute()]
  public unsafe partial class WeaponRefPrototype : Quantum.QuantumUnityPrototypeAdapter<Quantum.Prototypes.WeaponRefPrototype> {
    public Quantum.QuantumEntityPrototype Value;
    partial void ConvertUser(Quantum.QuantumEntityPrototypeConverter converter, ref Quantum.Prototypes.WeaponRefPrototype prototype);
    public override Quantum.Prototypes.WeaponRefPrototype Convert(Quantum.QuantumEntityPrototypeConverter converter) {
      var result = new Quantum.Prototypes.WeaponRefPrototype();
      converter.Convert(this.Value, out result.Value);
      ConvertUser(converter, ref result);
      return result;
    }
  }
}
#pragma warning restore 0109
#pragma warning restore 1591
